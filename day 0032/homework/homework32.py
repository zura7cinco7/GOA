
# 5) შექმენთ ფუნქცია, რომელიც არგუმენტად იღებს სიმბოლოების სიას. დაასორტირეთ ეს სია ანბანის მიხედვით, 
# გადააქციეთ string-ად და დააბრუნეთ

symbols = ["d","c","b","a"]
symbols.sort()
print(str(symbols))

# 6) შექმენით ფუნქცია, რომელიც არგუმენტად იღებს რიცხვების სიას და აბრუნებს მას კლებადობის მიხედვით დასორტირებულს

numbers = [1,2,3,4,5,6,7]
numbers.sort()
print(numbers[::-1])

# 4) შექმენით ფუნქცია, რომელიც არგუმენტად მიიღებს string-ს. ამ ფუნქციამ უნდა გაიგოს გადმოცემულ string-ში 
# თითოეული სიმბოლოს რაოდენობა და ჩაამატოს ახალ სიაში(ერთი სიმბოლის რაოდენობა მხოლოდ ერთხელ უნდა ჩაამატოთ. 
# მგალითად თუ string-ში 5 "a" გვხვდება, რიცხვი 5 მასივში მხოლოდ ერთხელ უნდა ჩავამატოთ, მაგრამ სხვა სიმბოლოც თუ
#  გვხვდება იგივე რაოდენობით, მას ვამატებთ ჩვეულებრივ). საბოლოდ დაასორტირეთ მიღებული სია ზრდადობით და
#  დააბრუნეთ
def symbol_count(string1):
    symbols = []
    for i in string1:
        if i not in symbols:
            symbols.append(i)
    return len(symbols)

print(symbol_count("ana"))

# manual_range

# def ფუნქციის არგუმნეტებს default - ად ვაძლევთ ქარხნულ მნიშვნელობას
def manual_range(end,start = 0, step = 1):
# სანამ start არ არის ნაკლები end არგუმნეტზე
    while start <= end: 
# ტერმინალში გამოიტანე start - ის იმ დროინდელი მნიშვნელობა
        print(start)
# start არგუმნეტს ვუმატებთ step - ს რადგან მომხმარებელს აქვს უფლება step -ს მისცემს ის მნიშვნელობა რომელიც მას სურს
# ანუ სტეპ ყოვლეთვის ერთი შეიძლება არ იყოს 
        start += step

print(manual_range(20,1,2))